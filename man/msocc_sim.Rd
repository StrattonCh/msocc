% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/msocc_sim.R
\name{msocc_sim}
\alias{msocc_sim}
\title{Simulate data from a multi-scale occupancy model.}
\usage{
msocc_sim(
  M = 10,
  J = 5,
  K = 5,
  psi = 0.8,
  theta = 0.75,
  p = 0.9,
  seed = NULL,
  site.df = NULL,
  site.mod = NULL,
  beta = NULL,
  sample.df = NULL,
  sample.mod = NULL,
  alpha = NULL,
  rep.df = NULL,
  rep.mod = NULL,
  delta = NULL
)
}
\arguments{
\item{M}{integer; number of sites to simulate}

\item{J}{may be either an integer or vector of length \code{M} representing
the number of samples taken from each site. In the former case, \code{J} is
set to \code{rep(J, M)}.}

\item{K}{may be either an integer or vector of length \code{sum(J)}
representing the number of replicates taken from each sample. In the former
case, \code{K} is set to \code{rep(K, sum(J))}.}

\item{psi}{may be either a single numeric value in (0,1) representing the constant
probability of presence at every site or a vector of length \code{M}
representing the probability of presence at each site.}

\item{theta}{may be either a single numeric value in (0,1) representing the
constant probability of occurence in every sample or a vector of length
\code{sum(J)} representing the probability of occurence in each sample.}

\item{p}{may be either a single numeric value in (0,1) representing the
constant probability of detection in every replicate or a vector of length
\code{sum(K)} representing the probability of detection in each replicate.}

\item{seed}{optional seed for reproducibility}

\item{site.df}{optional \code{data.frame} used to create the model matrix
implied by \code{site.mod} if \code{psi} is a function of covariates. This
\code{data.frame} must have \code{M} rows and include a column named 'site'.
If specified, \code{site.mod} and \code{beta} must also be specified.}

\item{site.mod}{optional model statement to produce \code{psi} when it is a
function of covariates. If specified, \code{site.df} and \code{beta} must
also be specified.}

\item{beta}{optional vector of parameters use to calculate \code{psi} when it
is modeled with covariates. It must have length equal to the number of
columns in the model matrix implied by \code{site.mod}.}

\item{sample.df}{optional \code{data.frame} used to create the model matrix
implied by \code{sample.mod} if \code{theta} is a function of covariates.
This \code{data.frame} must have \code{sum(J)} rows and include columns
named 'site' and 'sample'. If specified, \code{sample.mod} and \code{alpha}
must also be specified.}

\item{sample.mod}{optional model statement to produce \code{theta} when it is
a function of covariates. If specified, \code{sample.df} and \code{alpha}
must also be specified.}

\item{alpha}{optional vector of parameters use to calculate \code{theta} when it
is modeled with covariates. It must have length equal to the number of
columns in the model matrix implied by \code{sample.mod}.}

\item{rep.df}{optional \code{data.frame} used to create the model matrix
implied by \code{rep.mod} if \code{p} is a function of covariates. This
\code{data.frame} must have either \code{sum(J)} rows (if the covariates
used to model \code{p} are aggregated at the sample level) or \code{sum(K)}
rows (if the covariates used to model \code{p} are at the individual
replicate level). In the former case, it must include columns named 'site'
and 'sample'; in the latter case, it must include columns named 'site',
'sample', and 'rep'. If specified, \code{rep.mod} and \code{delta} must
also be specified.}

\item{rep.mod}{optional model statement to produce \code{p} when it is
a function of covariates. If specified, \code{rep.df} and \code{delta}
must also be specified.}

\item{delta}{optional vector of parameters use to calculate \code{p} when it
is modeled with covariates. It must have length equal to the number of
columns in the model matrix implied by \code{rep.mod}.}
}
\value{
an object of class \code{list} containing the following elements: \cr
\itemize{
\item \code{resp} a \code{data.frame} with \code{sum(J)} rows containing columns
'site', 'sample', prc1, ... \cr
\item \code{site} a \code{data.frame} with \code{M} rows containing a column
named 'site' and any site level covariates (if applicable) \cr
\item \code{sample} a \code{data.frame} with \code{sum(J)} rows containing
columns 'site' and 'sample' and any sample level covariates (if applicable) \cr
\item \code{rep} a \code{data.frame} with \code{sum(K)} rows containing columns
'site', 'sample', and 'rep' and any rep level covariates (if applicable) \cr
\item \code{params} a \code{list} containing the following elements: \cr
\itemize{
\item \code{psi} site level presence probabilities
\item \code{theta} sample level occurence probabilities
\item \code{p} replicate level detection probabilities
\item \code{z} vector of latent variables of length \code{M} denoting presence
at the site
\item \code{a} vector of latent variables of length \code{sum(J)} denoting
occurence in the sample
\item \code{z.vec} vector of latent variables of length \code{sum(J)} denoting
site level presence stretch across samples
}
\item \code{beta} matrix of regression coefficients used to generate \code{psi} if
\item \code{alpha} matrix of regression coefficients used to generate \code{theta} if
\item \code{delta} matrix of regression coefficients used to generate \code{p} if
}
}
\description{
This function simulates data from the multi-scale occupancy model
described by \href{https://pubs.er.usgs.gov/publication/70194000}{Dorazio
and Erickson (2017)}. Note that this documentation assumes there are \eqn{M}
sites, \eqn{J_i} samples within each site, and \eqn{K_{ij}} replicates from
each sample.
}
\details{
This function supports both balanced an unbalanced designs as well as
constant probabilities or those modeled by covariates. For unbalanced
designs, \code{J} should be specified as a vector of length \code{M}
representing the samples taken from each site. Similarly, \code{K} should be
specified as a vector of length \code{sum(J)} representing the number of
replicates taken from each sample. For balanced designs, each of \code{M},
\code{J}, and \code{K} should be specified as integers. Any combination of
balance or imbalance is accepted at all three levels. \cr For constant
probability at any level, specify \code{psi}, \code{theta}, or \code{p}
appropriately. Alternatively, the data frame, model and appropriate
parameter vector must be supplied to model a probability by covariates. See
the examples for more detail.
}
\examples{
# constant psi, theta, p
sim <- msocc_sim(M = 10, J = 5, K = 5)
mod <- msocc_mod(wide_data = sim$resp,
                 site = list(model = ~1, cov_tbl = sim$site),
                 sample = list(model = ~1, cov_tbl = sim$sample),
                 rep = list(model = ~1, cov_tbl = sim$rep),
                 progress = F)
posterior_summary(mod)
cred_plot(mod, truth = sim$params$psi)
cred_plot(mod, level = 'sample', truth = sim$params$theta)
cred_plot(mod, level = "rep", truth = sim$params$p)

# psi function of covariates, constant theta and p
sim <- msocc_sim(M = 50, J = 5, K = 5,
                 site.df = data.frame(site = 1:50, x = rnorm(50)),
                 site.mod = ~x,
                 beta = c(1,1))
mod <- msocc_mod(wide_data = sim$resp,
                 site = list(model = ~x, cov_tbl = sim$site),
                 sample = list(model = ~1, cov_tbl = sim$sample),
                 rep = list(model = ~1, cov_tbl = sim$rep),
                 progress = F)
posterior_summary(mod)
cred_plot(mod, truth = sim$params$psi)
cred_plot(mod, level = 'sample',truth = sim$params$theta, n = 10)
cred_plot(mod, level = "rep", truth = sim$params$p, n = 10)

# psi constant, theta function of covariates, p constant
sim <- msocc_sim(M = 10, J = 20, K = 5,
                 sample.df = data.frame(site = rep(1:10, each = 20),
                                        sample = rep(1:20, 10),
                                        x = rnorm(200)),
                 sample.mod = ~x,
                 alpha = c(1,1))
mod <- msocc_mod(wide_data = sim$resp,
                 site = list(model = ~1, cov_tbl = sim$site),
                 sample = list(model = ~x, cov_tbl = sim$sample),
                 rep = list(model = ~1, cov_tbl = sim$rep),
                 progress = F)
posterior_summary(mod)
cred_plot(mod, level = 'site', truth = sim$params$psi)
cred_plot(mod, level = 'sample', truth = sim$params$theta, n = 20)
cred_plot(mod, level = 'rep', truth = sim$params$p)

# psi constant, theta constant, p function of covariates at sample level
rep.df <- data.frame(
  site = rep(1:10, each = 5),
  sample = rep(1:5, 10),
  x = rnorm(50)
)
sim <- msocc_sim(M = 10, J = 5, K = 10,
                 rep.df = rep.df,
                 rep.mod = ~x,
                 delta = c(1,1))
mod <- msocc_mod(wide_data = sim$resp,
                 site = list(model = ~1, cov_tbl = sim$site),
                 sample = list(model = ~1, cov_tbl = sim$sample),
                 rep = list(model = ~x, cov_tbl = sim$rep), beta_bin = T, progress = F)
posterior_summary(mod)
cred_plot(mod, level = 'site', truth = sim$params$psi)
cred_plot(mod, level = 'sample', truth = sim$params$theta)
cred_plot(mod, level = 'rep', n = 25, truth = unique(sim$params$p))

# constant psi, theta, and p - unbalanced at sample level
sim <- msocc_sim(M = 10, J = sample(c(4:5), 10, replace = T), K = 5)
mod <- msocc_mod(wide_data = sim$resp,
                 site = list(model = ~1, cov_tbl = sim$site),
                 sample = list(model = ~1, cov_tbl = sim$sample),
                 rep = list(model = ~1, cov_tbl = sim$rep),
                 progress = F)
posterior_summary(mod)
cred_plot(mod, truth = sim$params$psi)
cred_plot(mod, level = 'sample', truth = sim$params$theta)
cred_plot(mod, level = "rep", truth = sim$params$p)

# constant psi, theta, and p - unbalanced at sample and rep level
num.sites <- 10
num.samples <- sample(c(4:5), num.sites, replace = T)
num.reps <- sample(c(5:8), sum(num.samples), replace = T)

sim <- msocc_sim(M = num.sites, J = num.samples, K = num.reps)
mod <- msocc_mod(wide_data = sim$resp,
                 site = list(model = ~1, cov_tbl = sim$site),
                 sample = list(model = ~1, cov_tbl = sim$sample),
                 rep = list(model = ~1, cov_tbl = sim$rep),
                 progress = F)
posterior_summary(mod)
cred_plot(mod, truth = sim$params$psi)
cred_plot(mod, level = 'sample', truth = sim$params$theta)
cred_plot(mod, level = "rep", truth = sim$params$p)

}
